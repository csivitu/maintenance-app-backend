// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id            Int           @id @default(autoincrement())
  name          String
  email         String        @unique
  Room          Room          @relation(fields: [roomId], references: [id])
  roomId        Int
  FeedBack      FeedBack[]
  issuedJobs    CleaningJob[] @relation("IssuedJobs")
  confirmedJobs CleaningJob[] @relation("ConfirmedJobs")
}
model Room {
  id           Int           @id @default(autoincrement())
  number       Int
  block        String
  Student      Student[]
  CleaningJobs CleaningJob[]
}

model CleaningJob {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  time          DateTime @db.Timestamp(0)
  Room          Room     @relation(fields: [roomId], references: [id])
  roomId        Int
  assigned      Boolean  @default(false)
  completed     Boolean  @default(false)
  Staff         Staff?   @relation(fields: [staffId], references: [id])
  staffId       Int? 
  issuedBy      Student? @relation("IssuedJobs", fields: [issuedById], references: [id])
  issuedById    Int? 
  confirmedBy   Student? @relation("ConfirmedJobs", fields: [confirmedById], references: [id])
  confirmedById Int? 
}


model Staff {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  role         Role          @default(cleaner) //* Need to change this to something more appropriate
  phone        String
  block        String
  CleaningJobs CleaningJob[]
}

model FeedBack {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  message   String
  Student   Student  @relation(fields: [studentId], references: [id])
  studentId Int
  Job       JobType
}

enum JobType {
  cleaning
  maintenance
  app
  other
}

enum Role {
  superAdmin
  cleaner
  cleaningAdmin
}
